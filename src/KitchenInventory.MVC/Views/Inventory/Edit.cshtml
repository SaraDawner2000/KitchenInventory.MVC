@using System.Reflection
@model KitchenInventory.MVC.Models.InventoryItem

@{
    ViewData["Title"] = "Edit";
}

<h1>Edit</h1>

<h4>Record</h4>
<hr />
<div class="row">
    <div class="col-md-4">
        <form asp-action="Edit">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <input type="hidden" asp-for="Id" />
            <div class="form-group">
                <label asp-for="ProductId" class="control-label">Product</label>
                <select asp-for="ProductId" class="form-control" asp-items="ViewBag.Products"></select>
                <span asp-validation-for="ProductId" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Quantity" class="control-label"></label>
                <input asp-for="Quantity" class="form-control" />
                <span asp-validation-for="Quantity" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="ExpirationDate" class="control-label"></label>
                <input asp-for="ExpirationDate" class="form-control" />
                <span asp-validation-for="ExpirationDate" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="AmountLeft" class="control-label"></label>
                <select asp-for="AmountLeft" class="form-control">
                    @foreach (var amount in Enum.GetValues(typeof(AmountStatus)).Cast<AmountStatus>())
                    {
                        var displayName = amount.GetType()
                        .GetMember(amount.ToString())
                        .First()
                        .GetCustomAttribute<System.ComponentModel.DataAnnotations.DisplayAttribute>()?
                        .Name ?? amount.ToString();

                        <option value="@amount">@displayName</option>
                    }
                </select>
                <span asp-validation-for="AmountLeft" class="text-danger"></span>
            </div>
            <div class="form-group">
                <input type="submit" value="Save" class="btn btn-primary" />
            </div>
        </form>
    </div>
</div>

<div>
    <a asp-action="Index">Back to List</a>
</div>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
}
